name: Terraform Plan

on:
  pull_request:
  workflow_dispatch:

defaults:
  run:
    working-directory: ./infra

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.ref }}

    - name: Cache dependencies
      id: cache
      uses: actions/cache@v3
      with:
        path: |
          ~/.terraform.d/plugin-cache
          ~/.cache/checkov
        key: ${{ runner.os }}-terraform

    - name: Run tfsec
      id: tfsec
      uses: aquasecurity/tfsec-action@v1.0.0
      with:
        additional_args: |
          --tfvars-file terraform.tfvars
          -e google-storage-bucket-encryption-customer-key

      continue-on-error: true

    - name: Test with Checkov
      id: checkov
      uses: bridgecrewio/checkov-action@v12
      with:
        directory: ./
        framework: terraform
        output_format: cli
      continue-on-error: true


    - name: 'GCP Auth'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: '${{ secrets.GCP_TF_CREDENTAILS }}'
        service_account: 'terraform-service-account@gcp-three-tier-ref-app.iam.gserviceaccount.com'

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2

    - name: Terraform Init
      id: init
      run: terraform init

    - name: Terraform Format
      id: fmt
      run: terraform fmt -check

    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Plan
      id: plan
      if: github.event_name == 'pull_request'
      run: terraform plan -no-color -input=false
      continue-on-error: true
      env:
        GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_CREDENTIALS }}
    
    - name: Render terraform docs inside the README.md and push changes back to PR branch
      uses: terraform-docs/gh-actions@v1.0.0
      with:
        working-dir: ./infra
        output-file: README.md
        output-method: inject
        git-push: "true"

    - name: Update Pull Request
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const { owner, repo } = context.repo;
          const runId = context.runId;

          const output = `
          #### Tfsec \`${{ steps.tfsec.outcome }}\`
          #### Checkov \`${{ steps.checkov.outcome }}\`
          #### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

          <details><summary>Show Plan</summary>

          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`

          </details>

          Checkov 
          ${{ steps.checkov.outputs.stdout }}

          Tfsec
          ${{ steps.tfsec.outputs.stdout }}

          Link to the workflow run can be found [here](https://github.com/${owner}/${repo}/actions/runs/${runId})

          *Pushed by: @${{ github.actor }}, Action: \`${{ github.event_name }}\`*`;

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Plan Status
      if: steps.plan.outcome == 'failure'
      run: exit 1
