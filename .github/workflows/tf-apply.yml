name: Terraform Apply

on:
  issue_comment:
    types:
      - created
  workflow_dispatch:

defaults:
  run:
    working-directory: ./infra

jobs:
  terraform:
    name: Terraform Apply
    if: ${{ (github.event.comment.body == 'tf apply')  }}
    #&& (github.event.review.state == 'approved')
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"

      - name: Update Pull Request
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const errOutput = 'Apply Failed: mergeable_state is not clean, ensure you have the proper approvals before attempting to Apply.'
            const res = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            })

            console.log(res)

            if (res.data.mergeable_state != 'clean'){
              github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: errOutput
              })
              core.setFailed(errOutput)
            }

      - name: 'GCP Auth'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_TF_CREDENTAILS }}'
          service_account: 'terraform-service-account@gcp-three-tier-ref-app.iam.gserviceaccount.com'

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color -input=false
        continue-on-error: true
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_TF_CREDENTIALS }}